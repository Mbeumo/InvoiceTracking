# Generated by Django 5.2.5 on 2025-01-XX XX:XX

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('invoice', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(max_length=7)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('can_create_invoices', models.BooleanField(default=True)),
                ('can_approve_invoices', models.BooleanField(default=False)),
                ('approval_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('requires_manager_approval', models.BooleanField(default=True)),
                ('default_currency', models.CharField(default='EUR', max_length=3)),
                ('payment_terms', models.IntegerField(default=30)),
                ('cost_center', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=100)),
                ('registration_number', models.CharField(blank=True, max_length=100)),
                ('vat_number', models.CharField(blank=True, max_length=100)),
                ('default_currency', models.CharField(default='EUR', max_length=3)),
                ('payment_terms', models.IntegerField(default=30)),
                ('bank_account', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_vendors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success'), ('reminder', 'Reminder')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('related_entity_type', models.CharField(blank=True, max_length=50)),
                ('related_entity_id', models.CharField(blank=True, max_length=36)),
                ('action_url', models.URLField(blank=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('delivery_channels', models.JSONField(default=list)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowRule',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('amount_threshold', 'Amount Threshold'), ('vendor_type', 'Vendor Type'), ('service_rule', 'Service Rule'), ('anomaly_detected', 'Anomaly Detected'), ('priority_level', 'Priority Level')], max_length=50)),
                ('trigger_conditions', models.JSONField()),
                ('action_type', models.CharField(choices=[('auto_approve', 'Auto Approve'), ('assign_user', 'Assign to User'), ('require_approval', 'Require Approval'), ('send_notification', 'Send Notification'), ('set_priority', 'Set Priority')], max_length=50)),
                ('action_parameters', models.JSONField()),
                ('priority', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_workflow_rules', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoice.service')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AIProcessingResult',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('ocr_text', models.TextField(blank=True)),
                ('ocr_confidence', models.FloatField(blank=True, null=True)),
                ('extracted_data', models.JSONField(default=dict)),
                ('anomaly_score', models.FloatField(blank=True, null=True)),
                ('anomalies_detected', models.JSONField(default=list)),
                ('priority_score', models.FloatField(blank=True, null=True)),
                ('fraud_risk_score', models.FloatField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('retry', 'Retry')], default='pending', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('ai_model_version', models.CharField(blank=True, max_length=50)),
                ('error_message', models.TextField(blank=True)),
                ('ai_recommendations', models.JSONField(default=list)),
                ('suggested_actions', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_result', to='invoice.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityAuditLog',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_email', models.EmailField()),
                ('user_name', models.CharField(max_length=255)),
                ('user_role', models.CharField(max_length=50)),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('invoice_create', 'Invoice Created'), ('invoice_update', 'Invoice Updated'), ('invoice_delete', 'Invoice Deleted'), ('invoice_approve', 'Invoice Approved'), ('invoice_reject', 'Invoice Rejected'), ('user_create', 'User Created'), ('user_update', 'User Updated'), ('user_delete', 'User Deleted'), ('permission_change', 'Permission Changed'), ('system_config', 'System Configuration'), ('data_export', 'Data Export'), ('bulk_operation', 'Bulk Operation')], max_length=50)),
                ('action_description', models.TextField()),
                ('entity_type', models.CharField(blank=True, max_length=50)),
                ('entity_id', models.CharField(blank=True, max_length=36)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=255)),
                ('request_id', models.CharField(blank=True, max_length=255)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
                ('risk_indicators', models.JSONField(default=list)),
                ('old_values', models.JSONField(blank=True, default=dict)),
                ('new_values', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('key', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(default='general', max_length=50)),
                ('is_editable', models.BooleanField(default=True)),
                ('requires_admin', models.BooleanField(default=False)),
                ('validation_rules', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'key'],
            },
        ),
        # Update Invoice model
        migrations.AddField(
            model_name='invoice',
            name='ai_processing_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='invoice',
            name='ai_risk_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='invoice',
            name='ai_priority_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='invoice',
            name='ai_anomalies',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='invoice',
            name='ai_recommendations',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='invoice',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='invoice.vendor'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='current_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='invoice.service'),
        ),
        # Add indexes for performance
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='invoice_notif_user_read_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['type', 'priority'], name='invoice_notif_type_priority_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='invoice_notif_created_idx'),
        ),
        migrations.AddIndex(
            model_name='aiprocessingresult',
            index=models.Index(fields=['processing_status'], name='invoice_aipr_status_idx'),
        ),
        migrations.AddIndex(
            model_name='aiprocessingresult',
            index=models.Index(fields=['anomaly_score'], name='invoice_aipr_anomaly_idx'),
        ),
        migrations.AddIndex(
            model_name='aiprocessingresult',
            index=models.Index(fields=['created_at'], name='invoice_aipr_created_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['user', 'timestamp'], name='invoice_secau_user_time_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['action_type', 'timestamp'], name='invoice_secau_action_time_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['risk_level', 'timestamp'], name='invoice_secau_risk_time_idx'),
        ),
        migrations.AddIndex(
            model_name='securityauditlog',
            index=models.Index(fields=['ip_address', 'timestamp'], name='invoice_secau_ip_time_idx'),
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['name'], name='invoice_vendor_name_idx'),
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['code'], name='invoice_vendor_code_idx'),
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['is_active'], name='invoice_vendor_active_idx'),
        ),
    ]