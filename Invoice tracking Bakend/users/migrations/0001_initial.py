# Generated by Django 5.2.5 on 2025-08-25 19:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.CharField(max_length=36, primary_key=True, serialize=False),
                ),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=50, null=True)),
                ("avatar_url", models.TextField(blank=True, null=True)),
                ("service_id", models.CharField(max_length=50)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("manager", "Manager"),
                            ("employee", "Employee"),
                            ("viewer", "Viewer"),
                            ("approver", "Approver"),
                            ("finance", "Finance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("manager_id", models.CharField(blank=True, max_length=36, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "timezone",
                    models.CharField(
                        blank=True, default="UTC", max_length=100, null=True
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("locked_until", models.DateTimeField(blank=True, null=True)),
                ("password_changed_at", models.DateTimeField(blank=True, null=True)),
                ("require_password_change", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_by", models.CharField(blank=True, max_length=36, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=36, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
    ]
